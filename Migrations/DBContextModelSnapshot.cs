// <auto-generated />
using System;
using LocacaoImoveis.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace LocacaoImoveis.Migrations
{
    [DbContext(typeof(DBContext))]
    partial class DBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("LocacaoImoveis.Models.ClientesModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CpfCnpj")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("cpfCnpj");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.Property<string>("EnderecoCep")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("enderecoCep");

                    b.Property<int?>("EnderecoId")
                        .HasColumnType("integer");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nome");

                    b.Property<long>("NumeroCasa")
                        .HasColumnType("bigint")
                        .HasColumnName("numeroCasa");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("telefone");

                    b.HasKey("Id");

                    b.HasIndex("EnderecoId");

                    b.ToTable("CLIENTES", (string)null);
                });

            modelBuilder.Entity("LocacaoImoveis.Models.ContratosModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Ativo")
                        .HasColumnType("boolean")
                        .HasColumnName("ativo");

                    b.Property<int>("ClientesId")
                        .HasColumnType("integer")
                        .HasColumnName("clienteId");

                    b.Property<DateTime>("DataFim")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("dataFim");

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("dataInicio");

                    b.Property<int>("ImovelId")
                        .HasColumnType("integer")
                        .HasColumnName("imovelId");

                    b.Property<double>("ValorLocacao")
                        .HasColumnType("double precision")
                        .HasColumnName("ValorLocacao");

                    b.HasKey("Id");

                    b.HasIndex("ClientesId")
                        .IsUnique();

                    b.HasIndex("ImovelId")
                        .IsUnique();

                    b.ToTable("CONTRATOS", (string)null);
                });

            modelBuilder.Entity("LocacaoImoveis.Models.EnderecosModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Bairro")
                        .HasColumnType("text")
                        .HasColumnName("bairro");

                    b.Property<string>("Cep")
                        .HasColumnType("text")
                        .HasColumnName("cep");

                    b.Property<string>("Localidade")
                        .HasColumnType("text")
                        .HasColumnName("localidade");

                    b.Property<string>("Logradouro")
                        .HasColumnType("text")
                        .HasColumnName("logradouro");

                    b.Property<string>("Uf")
                        .HasColumnType("text")
                        .HasColumnName("uf");

                    b.HasKey("Id");

                    b.ToTable("ENDERECOS", (string)null);
                });

            modelBuilder.Entity("LocacaoImoveis.Models.ImoveisModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Ativo")
                        .HasColumnType("boolean")
                        .HasColumnName("ativo");

                    b.Property<string>("EnderecoCep")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("enderecoCep");

                    b.Property<int?>("EnderecoId")
                        .HasColumnType("integer");

                    b.Property<bool>("Locado")
                        .HasColumnType("boolean")
                        .HasColumnName("locado");

                    b.Property<long>("NumeroCasa")
                        .HasColumnType("bigint")
                        .HasColumnName("numeroCasa");

                    b.HasKey("Id");

                    b.HasIndex("EnderecoId");

                    b.ToTable("IMOVEIS", (string)null);
                });

            modelBuilder.Entity("LocacaoImoveis.Models.ClientesModel", b =>
                {
                    b.HasOne("LocacaoImoveis.Models.EnderecosModel", "Endereco")
                        .WithMany("Cliente")
                        .HasForeignKey("EnderecoId");

                    b.Navigation("Endereco");
                });

            modelBuilder.Entity("LocacaoImoveis.Models.ContratosModel", b =>
                {
                    b.HasOne("LocacaoImoveis.Models.ClientesModel", "Clientes")
                        .WithOne("Contratos")
                        .HasForeignKey("LocacaoImoveis.Models.ContratosModel", "ClientesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LocacaoImoveis.Models.ImoveisModel", "Imovel")
                        .WithOne("Contratos")
                        .HasForeignKey("LocacaoImoveis.Models.ContratosModel", "ImovelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Clientes");

                    b.Navigation("Imovel");
                });

            modelBuilder.Entity("LocacaoImoveis.Models.ImoveisModel", b =>
                {
                    b.HasOne("LocacaoImoveis.Models.EnderecosModel", "Endereco")
                        .WithMany("Imoveis")
                        .HasForeignKey("EnderecoId");

                    b.Navigation("Endereco");
                });

            modelBuilder.Entity("LocacaoImoveis.Models.ClientesModel", b =>
                {
                    b.Navigation("Contratos");
                });

            modelBuilder.Entity("LocacaoImoveis.Models.EnderecosModel", b =>
                {
                    b.Navigation("Cliente");

                    b.Navigation("Imoveis");
                });

            modelBuilder.Entity("LocacaoImoveis.Models.ImoveisModel", b =>
                {
                    b.Navigation("Contratos");
                });
#pragma warning restore 612, 618
        }
    }
}
